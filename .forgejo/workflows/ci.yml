name: CI/CD Pipeline

on:
  push:
    branches: [main, "tom/*"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: git.tomfos.tr

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: git.tomfos.tr/tom/llama-go:build-cuda
    env:
      LIBRARY_PATH: ${{ github.workspace }}
      C_INCLUDE_PATH: ${{ github.workspace }}
      LD_LIBRARY_PATH: ${{ github.workspace }}:${{ github.workspace }}/build/bin
      # Configure sccache for CMake builds
      CMAKE_C_COMPILER_LAUNCHER: sccache
      CMAKE_CXX_COMPILER_LAUNCHER: sccache
      CMAKE_CUDA_COMPILER_LAUNCHER: sccache
      # Enable GitHub Actions cache backend
      SCCACHE_GHA_ENABLED: "true"
      # Test models for integration tests
      TEST_CHAT_MODEL: Qwen3-0.6B-Q8_0.gguf
      TEST_EMBEDDING_MODEL: Qwen3-Embedding-0.6B-Q8_0.gguf
      # Suppress verbose llama.cpp logs (set to "info" or "debug" for debugging)
      LLAMA_LOG: error
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Detect versions
        id: versions
        uses: https://git.tomfos.tr/actions/detect-versions@v1

      - name: Cache test models
        uses: https://github.com/actions/cache@v4
        with:
          path: |
            Qwen3-0.6B-Q8_0.gguf
            Qwen3-Embedding-0.6B-Q8_0.gguf
          key: test-models-qwen3-0.6b-q8-v1

      - name: Cache dependencies
        uses: https://github.com/actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          # Cache key includes OS/arch, llama.cpp commit, wrapper changes, and Go dependencies
          # Invalidates when: platform changes, submodule updates, wrapper modified, or dependencies change
          key: ${{ steps.versions.outputs.slug }}-${{ steps.versions.outputs.arch }}-go-${{ hashFiles('llama.cpp/.git/HEAD', 'wrapper.cpp', 'wrapper.h', '**/go.sum') }}
          restore-keys: |
            ${{ steps.versions.outputs.slug }}-${{ steps.versions.outputs.arch }}-go-${{ hashFiles('llama.cpp/.git/HEAD', 'wrapper.cpp', 'wrapper.h') }}
            ${{ steps.versions.outputs.slug }}-${{ steps.versions.outputs.arch }}-go-

      - name: Setup sccache
        uses: https://git.tomfos.tr/tom/sccache-action@v1

      - name: Build library
        run: |
          make libbinding.a

      - name: Debug - List built artifacts
        run: |
          echo "=== GPU Detection ==="
          nvidia-smi || echo "No GPU detected"
          echo "=== Files in build/bin ==="
          ls -la build/bin/ || echo "build/bin not found"
          echo "=== Files in workspace root ==="
          ls -la *.so *.a 2>/dev/null || echo "No .so or .a files in workspace root"
          echo "=== Current working directory ==="
          pwd
          echo "=== LD_LIBRARY_PATH ==="
          echo "$LD_LIBRARY_PATH"

      - name: Download test models
        run: |
          if [ ! -f Qwen3-0.6B-Q8_0.gguf ]; then
            wget -q https://huggingface.co/Qwen/Qwen3-0.6B-GGUF/resolve/main/Qwen3-0.6B-Q8_0.gguf
          fi
          if [ ! -f Qwen3-Embedding-0.6B-Q8_0.gguf ]; then
            wget -q https://huggingface.co/Qwen/Qwen3-Embedding-0.6B-GGUF/resolve/main/Qwen3-Embedding-0.6B-Q8_0.gguf
          fi

      - name: Run tests
        run: |
          go run github.com/onsi/ginkgo/v2/ginkgo -v ./...

      - name: Run example
        run: |
          go run ./examples/simple -m Qwen3-0.6B-Q8_0.gguf -p 'Hello world' -n 50
